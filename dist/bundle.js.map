{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/display.js","webpack:///./src/app.js","webpack:///./src/chip8.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","backgroundColor","foregroundColor","width","height","ctx","document","getElementById","getContext","window","chip","display","this","reset","address","bytes","by","Memory","PC","Stack","Array","V","I","DelayTimer","SoundTimer","clear","load","opcode","x","y","kk","nnn","pop","push","Math","floor","random","row","pixel","col","togglePixel","fillStyle","fillRect"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const backgroundColor = \"#10203c\";\nconst foregroundColor = \"#ddd\";\nconst width = 64;\nconst height = 32;\n\nexport class Display {\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n\n    clear() {\n        this.ctx.fillStyle = backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n    }\n\n    togglePixel(row, col) {\n        this.ctx.fillStyle = foregroundColor;\n        this.ctx.fillRect(row, col, 1, 1);\n    }\n}\n\n","import { Display } from './display';\nimport { Chip8 } from './chip8';\n\nconst canvas = document.getElementById('display');\nconst ctx = canvas.getContext('2d');\n\nwindow.chip = new Chip8(new Display(ctx));\n\n","export class Chip8 {\n    constructor(display) {\n        this.display = display;\n        this.reset();\n    }\n\n    load(address, bytes) {\n        for(const by in bytes) {\n            this.Memory[address++] = bytes[by];\n        }\n    }\n\n    reset() {\n        this.PC = 0x200;\n        this.Stack = [];\n        this.Memory = Array(4096);\n        this.V = Array(15);\n        this.I = 0;\n        this.DelayTimer = 0;\n        this.SoundTimer = 0;\n        this.display.clear();\n\n        // load font into low memory\n        this.load(0x0, [\n            0xF0, 0x90, 0x90, 0x90, 0xF0,       // 0\n            0x20, 0x60, 0x20, 0x20, 0x70,       // 1\n            0xF0, 0x10, 0xF0, 0x80, 0xF0,       // 2\n            0xF0, 0x10, 0xF0, 0x10, 0xF0,       // 3\n            0x90, 0x90, 0xF0, 0x10, 0x10,       // 4\n            0xF0, 0x80, 0xF0, 0x10, 0xF0,       // 5\n            0xF0, 0x80, 0xF0, 0x90, 0xF0,       // 6\n            0xF0, 0x10, 0x20, 0x40, 0x40,       // 7\n            0xF0, 0x90, 0xF0, 0x90, 0xF0,       // 8\n            0xF0, 0x90, 0xF0, 0x10, 0xF0,       // 9\n            0xF0, 0x90, 0xF0, 0x90, 0x90,       // A\n            0xE0, 0x90, 0xE0, 0x90, 0xE0,       // B\n            0xF0, 0x80, 0x80, 0x80, 0xF0,       // C\n            0xE0, 0x90, 0x90, 0x90, 0xE0,       // D\n            0xF0, 0x80, 0xF0, 0x80, 0xF0,       // E\n            0xF0, 0x80, 0xF0, 0x80, 0x80        // F \n        ]);\n\n        // test program to display C8 (TODO: remove this)\n        this.load(0x200, [\n            0x60, 0x01,         // LD V0, 1\n            0x61, 0x0c,         // LD V1, $0c\n            0xF1, 0x29,         // LD F, V1\n            0xd0, 0x05,         // DRW V0, V0, 5\n            0x63, 0x06,         // LD V3, $06\n            0x61, 0x08,         // LD V1, $08\n            0xF1, 0x29,         // LD F, V1\n            0xd3, 0x05,         // DRW V3, V0, 5\n        ]);\n    }\n\n    get state() {\n        return {\n            PC: this.PC,\n            Stack: this.Stack,\n            V: this.V,\n            I: this.I,\n            DelayTimer: this.DelayTimer,\n            SoundTimer: this.SoundTimer\n        }\n    }\n\n    advanceEmulator() {\n        const opcode = this.Memory[this.PC] << 8 | this.Memory[this.PC+1];\n        const n = opcode & 0x000f;\n        const x = (opcode >> 8) & 0x0f;\n        const y = (opcode >> 4) & 0x0f;\n        const kk = opcode & 0xff;\n        const nnn = opcode & 0x0fff;\n\n        switch (opcode & 0xf000) {\n            case 0x0000:\n                if (opcode === 0x00e0) {\n                    this.display.clear();\n                } else if (opcode === 0x00ee) {\n                    this.PC = this.Stack.pop();\n                } else {\n                    throw `Invalid opcode: ${this.opcode}`;\n                }\n                this.PC += 2;\n                break;\n            case 0x1000:\n                this.PC = nnn;\n                break;\n            case 0x2000:\n                this.Stack.push(this.PC);\n                this.PC = nnn;\n                break;\n            case 0x3000:\n                this.PC += (this.V[x] === kk) ? 4 : 2;\n                break;\n            case 0x4000:\n                this.PC += (this.V[x] === kk) ? 2 : 4;\n                break;\n            case 0x5000:\n                this.PC += (this.V[x] === this.V[y]) ? 4 : 2;\n                break;\n            case 0x6000:\n                this.V[x] = kk;\n                this.PC += 2;\n                break;\n            case 0x7000:\n                this.V[x] = this.V[x] + kk;\n                this.PC += 2;\n                break;\n            case 0x8000:\n                switch (n) {\n                    case 0:\n                        this.V[x] = this.V[y];\n                        this.PC += 2;\n                        break;\n                    case 1:\n                        this.V[x] = this.V[x] | this.V[y];\n                        this.PC += 2;\n                        break;\n                    case 2:\n                        this.V[x] = this.V[x] & this.V[y];\n                        this.PC += 2;\n                        break;\n                    case 3:\n                        this.V[x] = this.V[x] ^ this.V[y];\n                        this.PC += 2;\n                        break;\n                    case 4:\n                        this.V[x] = this.V[x] + this.V[y];\n                        this.V[0xf] = (this.V[x] > 255) ? 1 : 0;\n                        this.V[x] = this.V[x] & 0xff;\n                        this.PC += 2;\n                        break;\n                    case 5:\n                        this.V[0xf] = this.V[y] > this.V[x] ? 1 : 0;\n                        this.V[x] = this.V[x] - this.V[y];\n                        this.PC += 2;\n                        break;\n                    case 6:\n                        this.V[0xf] = this.V[x] & 1;\n                        this.V[x] = this.V[x] >> 1;\n                        this.PC += 2;\n                        break;\n                    case 7:\n                        this.V[0xf] = this.V[y] > this.V[x] ? 1 : 0;\n                        this.V[x] = this.V[y] - this.V[x];\n                        this.PC += 2;\n                        break;\n                    case 0xE:\n                        this.V[0xf] = this.V[x] & 0x80 ? 1 : 0;\n                        this.V[x] = this.V[x] << 1;\n                        this.PC += 2;\n                        break;\n                }\n                break;\n            case 0x9000:\n                this.PC += this.V[x] != this.V[y] ? 4 : 2;\n                break;\n            case 0xA000:\n                this.I = nnn;\n                this.PC += 2;\n                break;\n            case 0xB000:\n                this.PC = nnn + this.V[0];\n                break;\n            case 0xC000:\n                this.V[x] = Math.floor(Math.random()*255) & kk;\n                this.PC += 2;\n                break;\n            case 0xD000:\n                for (let row=0; row<n; row++) {\n                    let pixel = this.Memory[this.I+row];\n                    for (let col=0; col<8; col++) {\n                        if((pixel & (0x80 >> col)) != 0) {\n                            this.display.togglePixel(this.V[x] + col, this.V[y] + row);\n                        }\n                    }\n                }\n                this.PC += 2;\n                break;\n            case 0xE000:\n                if (kk === 0x9e) {\n                    //Skip next instruction if key with the value of Vx is pressed.\n                    //Checks the keyboard, and if the key corresponding to the value of Vx is currently in the down position, PC is increased by 2.\n                    this.PC += 2;\n                } else if (kk === 0xA1) {\n                    //Skip next instruction if key with the value of Vx is not pressed.\n                    //Checks the keyboard, and if the key corresponding to the value of Vx is currently in the up position, PC is increased by 2.\n                    this.PC += 4;\n                } else {\n                    throw `Invalid opcode: ${opcode}`;\n                }\n                break;\n            case 0xF000:\n                switch (kk) {\n                    case 0x07:\n                        this.V[x] = this.DelayTimer;\n                        this.PC += 2;\n                        break;\n                    case 0x0a:\n                        //Wait for a key press, store the value of the key in Vx.\n                        //All execution stops until a key is pressed, then the value of that key is stored in Vx.\n                        throw new `Opcode ${opcode} not implemented yet`;\n                        this.PC += 2;\n                        break;\n                    case 0x15:\n                        this.DelayTimer = this.V[x];\n                        this.PC += 2;\n                        break;\n                    case 0x18:\n                        this.SoundTimer = this.V[x];\n                        this.PC += 2;\n                        break;\n                    case 0x1e:\n                        this.I = this.I + this.V[x];\n                        this.PC += 2;\n                        break;\n                    case 0x29:\n                        this.I = this.V[x] * 5;\n                        this.PC += 2;\n                        break;\n                    case 0x33:\n                        this.Memory[I]   = (this.V[x] % 1000) / 100; // hundred's\n                        this.Memory[I+1] = (this.V[x] % 100) / 10;   // ten's\n                        this.Memory[I+2] = (this.V[x] % 10);         // one's\n                        this.PC += 2;\n                        break;\n                    case 0x55:\n                        for (let i=0; i<=x; i++) {\n                            this.Memory[I+i] = this.V[i];\n                        }\n                        this.PC += 2;\n                        break;\n                    case 0x65:\n                        for (let i=0; i<=x; i++) {\n                            this.V[i] = this.Memory[I+i];\n                        }\n                        this.PC += 2;\n                        break;\n                    default:\n                        throw new `Invalid opcode: ${opcode}`;\n                }\n        }\n    }\n\n    updateTimers() {\n    }\n}\n"],"sourceRoot":""}